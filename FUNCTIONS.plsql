DELIMITER ;;
CREATE OR REPLACE FUNCTION INSERT_LOGIN(P_USERNAME VARCHAR(255), P_PASSWORD VARCHAR(255))
RETURNS INT(11) DETERMINISTIC
BEGIN
	DECLARE V_RETURN INT(11);
	DECLARE V_QTD INT(11);
    SET V_RETURN := 0;
    SELECT COUNT(*) INTO V_QTD FROM USERS WHERE username = P_USERNAME;
    SET V_RETURN := ((CASE WHEN TRIM(P_USERNAME) IS NULL THEN 1 ELSE 0 END) +
                   (CASE WHEN LENGTH(P_USERNAME) > 255 THEN 2 ELSE 0 END) +
                   (CASE WHEN TRIM(P_PASSWORD) IS NULL THEN 4 ELSE 0 END) +
                   (CASE WHEN LENGTH(P_PASSWORD) > 255 THEN 8 ELSE 0 END) +
                   (CASE WHEN V_QTD <> 0 THEN 16 ELSE 0 END));
    IF V_RETURN = 0 THEN
        INSERT INTO users (username, password) VALUES (P_USERNAME, P_PASSWORD);
    END IF;
    RETURN V_RETURN;
END

DELIMITER ;;
CREATE OR REPLACE FUNCTION VALIDATE_LOGIN(P_USERNAME VARCHAR(255), P_PASSWORD VARCHAR(255))
RETURNS INT(11) DETERMINISTIC
BEGIN
	DECLARE V_RETURN INT(11);
	DECLARE V_QTD INT(11);
    SET V_RETURN := 0;
    SELECT COUNT(*) INTO V_QTD FROM USERS WHERE username = P_USERNAME;
    SET V_RETURN := ((CASE WHEN TRIM(P_USERNAME) IS NULL THEN 1 ELSE 0 END) +
                   (CASE WHEN LENGTH(P_USERNAME) > 255 THEN 2 ELSE 0 END) +
                   (CASE WHEN TRIM(P_PASSWORD) IS NULL THEN 4 ELSE 0 END) +
                   (CASE WHEN LENGTH(P_PASSWORD) > 255 THEN 8 ELSE 0 END) +
                   (CASE WHEN V_QTD <> 1 THEN 16 ELSE 0 END));
    IF V_RETURN = 0 THEN
        SELECT COUNT(*) INTO V_QTD FROM users WHERE username = P_USERNAME AND password = P_PASSWORD;
        IF V_QTD <> 1 THEN
        	SET V_RETURN := V_RETURN + 32;
    	END IF;
    END IF;
    RETURN V_RETURN;
END

DELIMITER ;;
CREATE OR REPLACE FUNCTION UPDATE_LOGIN(P_USERNAME VARCHAR(255), P_PASSWORD VARCHAR(255))
RETURNS INT(11) DETERMINISTIC
BEGIN
	DECLARE V_RETURN INT(11);
	DECLARE V_QTD INT(11);
    SET V_RETURN := 0;
    SELECT COUNT(*) INTO V_QTD FROM USERS WHERE username = P_USERNAME;
    SET V_RETURN := ((CASE WHEN TRIM(P_USERNAME) IS NULL THEN 1 ELSE 0 END) +
                   (CASE WHEN LENGTH(P_USERNAME) > 255 THEN 2 ELSE 0 END) +
                   (CASE WHEN TRIM(P_PASSWORD) IS NULL THEN 4 ELSE 0 END) +
                   (CASE WHEN LENGTH(P_PASSWORD) > 255 THEN 8 ELSE 0 END) +
                   (CASE WHEN V_QTD <> 1 THEN 16 ELSE 0 END));
    IF V_RETURN = 0 THEN
        UPDATE users SET password = P_PASSWORD WHERE username = P_USERNAME;
    END IF;
    RETURN V_RETURN;
END